[tool.poetry]
name = "dfint64_patch"
version = "0.1.0"
description = "Text patcher for x64 bit version of the Dwarf Fortress game"
authors = ["insolor <insolor@gmail.com>"]
license = "MIT License"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
loguru = "^0.7.2"
peclasses = {version = "^0.4.0", source = "dfint"}
omegaconf = "^2.3.0"
poethepoet = "^0.28.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
hypothesis = "^6.112.0"
coverage = "^7.6.0"
mypy = "^1.11.2"
ruff = "^0.6.4"

[tool.poetry.scripts]
extract = "dfint64_patch.extract_strings.cli:main"
patch = "dfint64_patch.patch:main"

[tool.poe.tasks]
extract.script = "dfint64_patch.extract_strings.cli:main"

[[tool.poetry.source]]
name = "dfint"
url = "https://dfint.github.io/pypi-index/"
priority = "explicit"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "T201",  # `print` found
    "S101",  # Use of assert detected
    "ANN101",  # Missing type annotation for self in method
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "D",
    # "D100",  # Missing docstring in public module
    # "D104",  # Missing docstring in public package
    # "D105",  # Missing docstring in magic method
    # "D200",  # One-line docstring should fit on one line
    # "D212",  # Multi-line docstring summary should start at the first line
    "TD",  # Ignore todo warnings
    "FIX002",  # Ignore todo warnings
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  # Don't warn about using of asserts in tests
    "ANN201",  # Ignore "Missing return type annotation for public function", tests don't return anything
    "D",  # Don't warn about missing documentation in tests
    "RUF001",  # String contains ambiguous {}. Did you mean {}?
]
