name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
        cache-dependency-path: poetry.lock

    - name: Install fasm
      run: |
        sudo apt install fasm

    - name: Compile test exe file
      run: |
        make -C ./tests/ build

    - name: Install library and dependencies
      run: poetry install --no-interaction

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        poetry run flake8 --exclude .venv --count --exit-zero --max-complexity=10 --statistics

    - name: Test with pytest
      run: |
        poetry run pytest --cov=./
        
    - name: Upload coverage data to coveralls.io
      run: |
        pip install coveralls
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
